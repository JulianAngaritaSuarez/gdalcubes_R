% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cube.R
\name{gcbs_cube}
\alias{gcbs_cube}
\title{Create a data cube from an image collection}
\usage{
gcbs_cube(image_collection, view, chunking = c(16, 256, 256))
}
\arguments{
\item{image_collection}{Source image collection as from \code{gcbs_image_collection} or \code{gcbs_create_image_collection}}

\item{view}{A data cube view defining the shape (spatiotemporal extent, resolution, and spatial reference), if missing, a default overview is used}

\item{chunking}{Vector of length 3 defining the size of data cube chunks in the order time, y, x.}
}
\value{
A proxy data cube object
}
\description{
Create a proxy data cube, which loads data from a given image collection
}
\details{
The following steps will be performed when the data cube is requested to read data of a chunk:

 1. Filter images from the input collection that intersect with the spatiotemporal extent of the chunk
 2. For all resulting images, apply gdalwarp to reproject / warp the image to the target SRS and size to a GDAL MEM dataset
 3. Read the resulting data to the chunk buffer and if pixels already contain non NAN values, apply an aggregation method (as defined in the view)
}
\note{
This function returns a proxy object, i.e., it will not start any computations besides deriving the shape of the result.
}
\examples{
\dontrun{
gcbs_cube(
   gcbs_image_collection("MOD13A3.db"), 
   view = gcbs_view(proj="EPSG:4326", 
                   l = -20, r = 20, t = 60, b=40, 
                   t0="2018-01-01", t1="2018-09-30", 
                   dt="P1M", nx=1000, ny=500, 
                   aggregation = "mean", resampling="bilinear"))
}
}
