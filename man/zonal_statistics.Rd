% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/zonal_statistics.R
\name{zonal_statistics}
\alias{zonal_statistics}
\title{Query summary statistics of data cube values over polygons}
\usage{
zonal_statistics(x, geom, expr, out_dir = tempdir(),
  prefix = basename(tempfile()), ogr_layer = NULL)
}
\arguments{
\item{x}{source data cube}

\item{geom}{Either an sf object, or a path to an OGR dataset (Shapefile, GeoPackage, or similar) with input polygon geometries}

\item{expr}{character vector of summary statistics expressions, describing pairs of aggregation functions and data cube bands (e.g. "mean(band1)")}

\item{out_dir}{output directory where resulting files will be written to}

\item{prefix}{prefix of resulting filenames; will be followed by date/time}

\item{ogr_layer}{If the input OGR dataset has multiple layers, a layer can be chosen by name}
}
\value{
vector of paths to produced GeoPackage files
}
\description{
This function will overlay spatial polygons with a data cube and compute summary statistics
of pixels within polygons over all time slices.
}
\details{
Input geometries must be stored as OGR dataset (e.g. shapefile, geopackage, or similar). 

The function creates one geopackage per time slice. Each geopackage contains all polygons as geometries and all computed 
statistics as attributes. 

Available summary statistics currently include "min", "max", "mean", "median", "count", "sum", and "prod".
}
\note{
Currently, the spatial reference systems of the data cube and the features must be identical.
}
\examples{
# if not already done in other examples
if (!file.exists(file.path(tempdir(), "L8.db"))) {
  L8_files <- list.files(system.file("L8NY18", package = "gdalcubes"),
                         ".TIF", recursive = TRUE, full.names = TRUE)
  create_image_collection(L8_files, "L8_L1TP", file.path(tempdir(), "L8.db"))
}
L8.col = image_collection(file.path(tempdir(), "L8.db"))
v = cube_view(extent=list(left=388941.2, right=766552.4,
                          bottom=4345299, top=4744931, t0="2018-01-01", t1="2018-12-02"),
              srs="EPSG:32618", dy=300, dx=300, dt="P1M", aggregation = "median", resampling = "bilinear")
L8.cube = raster_cube(L8.col, v) 
L8.cube = select_bands(L8.cube, c("B04", "B05")) 
L8.ndvi = apply_pixel(L8.cube, "(B05-B04)/(B05+B04)", "NDVI") 
L8.ndvi

# toy example: overlay NDVI data with NYC districts
x = zonal_statistics(L8.ndvi, system.file("nycd.gpkg", package = "gdalcubes"),expr = "median(NDVI)", prefix = "nycd_ndvi_")


if (requireNamespace("sf", quietly = TRUE)) {
  plot(sf::read_sf(x[8]))
}

}
