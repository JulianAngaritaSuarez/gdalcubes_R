% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/view.R
\name{cube_view}
\alias{cube_view}
\title{Create a spatiotemporal data cube view}
\usage{
cube_view(cube, view, proj, nx, ny, dx, dy, l, r, t, b, dt, nt, t0, t1,
  aggregation, resampling)
}
\arguments{
\item{cube}{Return the view of the specified data cube, other arguments will be ignored}

\item{view}{if provided, update the view object instead of creating a new data cube view where fields that are already set will be overwritten}

\item{proj}{output projection as string, can be proj4 definition, WKT, or in the form "EPSG:XXXX"}

\item{nx}{number of pixels in x-direction (longitude / easting)}

\item{ny}{number of pixels in y-direction (latitude / northing)}

\item{dx}{size of pixels in x-direction (longitude / easting)}

\item{dy}{size of pixels  in y-direction (latitude / northing)}

\item{l}{left boundary of the spatial extent (expressed in the coordinate system defined by proj or WGS84 by default)}

\item{r}{right boundary of the spatial extent (expressed in the coordinate system defined by proj or WGS84 by default)}

\item{t}{top boundary of the spatial extent (expressed in the coordinate system defined by proj or WGS84 by default)}

\item{b}{bottom boundary of the spatial extent (expressed in the coordinate system defined by proj or WGS84 by default)}

\item{dt}{size of pixels in time-direction, expressed as ISO8601 period string (only 1 number and unit is allowed) such as "P16D"}

\item{nt}{number of pixels in t-direction}

\item{t0}{start date/time of the temporal extent (expressed as ISO8601 datetime string)}

\item{t1}{end date/time of the temporal extent (expressed as ISO8601 datetime string)}

\item{aggregation}{aggregation method as string, defining how to deal with pixels with data from multiple images, can be "min", "max", "mean", "median", "first"}

\item{resampling}{resampling method used in gdalwarp when images are read, can be "near", "bilinear", "bicubic" or others as supported by gdalwarp (see \url{https://www.gdal.org/gdalwarp.html})}
}
\value{
A list with view properties
}
\description{
Data cube views define the shape of a cube, i.e., the spatiotemporal extent, resolution, and projection how to look at the data.
They are used to access image collections as on-demand data cubes. The data cube will filter images based on the view's
extent, read image data at the defined resolution, and warp to the output projection automatically. All parameters
are optional. By default gdalcubes tries to derive a view that covers the whole image collection at course resolution, which
may or may not make sense in practice. It is recommended to at least spcify the spatial and temporal extent, the resolution (nx, ny, dt) 
and the output projection.
}
\note{
All arguments are optional
}
\examples{
# 1. full manual specification
cube_view(proj="EPSG:4326", l = -20, r = 20, t = 60, b=40, 
          t0="2018-01-01", t1="2018-09-30", dt="P1M", nx=1000, 
          ny=500, aggregation = "mean", resampling="bilinear")
          
# 2. read existing data cube
 L8_files <- list.files(system.file("L8NY18", package = "gdalcubes"),
                        ".TIF", recursive = TRUE, full.names = TRUE)
 L8.col = create_image_collection(L8_files, "L8_L1TP") 
 v = cube_view(cube(L8.col)) 
 
# 3. overwrite parts of an existing data cube view
vnew = cube_view(view = v, dt="P1M")  
}
