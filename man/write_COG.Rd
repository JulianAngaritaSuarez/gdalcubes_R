% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cube.R
\name{write_COG}
\alias{write_COG}
\title{Export a data cube as a collection of cloud-optimized GeoTIFF files}
\usage{
write_COG(x, dir = tempfile(pattern = ""), prefix = "",
  rsmpl_overview = "nearest", creation_options = NULL,
  write_json_descr = FALSE)
}
\arguments{
\item{dir}{a data cube proxy object (class cube)}

\item{prefix}{output file name}

\item{rsmpl_overview}{resampling method for overview (image pyramid) generation (see \url{https://gdal.org/programs/gdaladdo.html} for available methods)}

\item{creation_options}{additional creation options for resulting GeoTIFF files, e.g. to define compression (see \url{https://gdal.org/drivers/raster/gtiff.html#creation-options})}

\item{write_json_descr}{logical; write a JSON description of x as additional file}
}
\value{
Vector of created GeoTIFF files
}
\description{
This function will time slices of a data cube as cloud-optimized GeoTIFF files
in a given directory.
}
\details{
If \code{write_json_descr} is TRUE, the function will write an additional file with name according to prefix (if not missing) or simply cube.json 
This file includes a serialized description of the input data cube, including all chained data cube operations.

Additional GDAL creation options for resulting GeoTIFF files must be passed as a named list of simple strings, where element names refer to the key. For example,
\code{creation_options = list("COMPRESS" = "DEFLATE", "ZLEVEL" = "5")} would enable deflate compression at level 5.
}
\examples{
# create image collection from example Landsat data only 
# if not already done in other examples
if (!file.exists(file.path(tempdir(), "L8.db"))) {
  L8_files <- list.files(system.file("L8NY18", package = "gdalcubes"),
                         ".TIF", recursive = TRUE, full.names = TRUE)
  create_image_collection(L8_files, "L8_L1TP", file.path(tempdir(), "L8.db")) 
}

L8.col = image_collection(file.path(tempdir(), "L8.db"))
v = cube_view(extent=list(left=388941.2, right=766552.4, 
              bottom=4345299, top=4744931, t0="2018-04", t1="2018-04"),
              srs="EPSG:32618", nx = 497, ny=526, dt="P1M")
write_COG(select_bands(raster_cube(L8.col, v), c("B04", "B05")), dir=)
}
